# Generated by Django 5.2 on 2025-04-18 15:52

import django.utils.timezone
import localflavor.us.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('profession', models.CharField(choices=[('pm', 'Project Manager'), ('sup', 'Superintendent'), ('qc', 'Quality Control'), ('qa', 'Quality Assurance'), ('exec', 'Executive'), ('coor', 'Coordinator / Admin'), ('eng', 'Engineer'), ('fore', 'Foreman'), ('welder', 'Welder'), ('painter', 'Painter / Coatings Tech'), ('operator', 'Equipment Operator'), ('helper', 'Helper / Laborer'), ('safety', 'Safety'), ('survey', 'Surveyor'), ('pl', 'Pipeline Tech / Journeyman'), ('craft', 'Other Skilled Craft'), ('office', 'Office / Support Staff'), ('other', 'Other')], max_length=20)),
                ('industry', models.CharField(choices=[('gc', 'General Contractor'), ('insp', 'Inspection'), ('owner', 'Owner/Client'), ('sub', 'Subcontractor / Service Provider'), ('fab', 'Fabrication'), ('coat', 'Coating/Painting'), ('equip', 'Equipment Supplier / Rental'), ('consult', 'Consultant / Engineering'), ('other', 'Other')], max_length=20)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('state', localflavor.us.models.USStateField(blank=True, max_length=2)),
                ('referral_source', models.CharField(blank=True, choices=[('linkedin', 'LinkedIn'), ('email', 'Email Campaign'), ('website', 'FDQ Website'), ('word', 'Word of Mouth'), ('event', 'Workshop / Training Event'), ('company', 'Company Referral'), ('search', 'Google / Search Engine'), ('other', 'Other')], default='other', help_text='How did you hear about FDQ?', max_length=20)),
                ('is_certified', models.BooleanField(default=False)),
                ('certified_at', models.DateField(blank=True, null=True)),
                ('fdq_level', models.CharField(choices=[('L1', 'FDQ Level 1 - Practitioner'), ('L2', 'FDQ Level 2 - Implementer')], default='L1', editable=False, max_length=2)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
